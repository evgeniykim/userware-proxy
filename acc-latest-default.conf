# This config applicable when "OpenSilver-only" is run on local machine while rest is on acceptance server

log_format upstreamlog '$remote_addr - [$time_local] $locname '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" ProxyHost: $proxy_host '
                    #'Cookies: $cookie_WASID_HAG, $cookie_WAAK_HAG, $cookie_UPD '
                    #'Cookies: $http_cookie '
                    #'Set-Cookies: $sent_http_set_cookie '
                    'Location: $upstream_http_location';

map $site $target_site {
    default '';
    'mun'   'latest-authority.pulsencombine-a.se';
    'per'   'latest-performer.pulsencombine-a.se';
}

map $site $target_xap {
    default '';
    'mun'   'mun/Combine.Municipality.Silverlight.xap';
    'per'   'per/Combine.Performer.Silverlight.xap';
}

map $site $classic_app_uri {
    default '';
    'mun'   'Classic/Combine.Municipality.Web';
    'per'   'Classic/Combine.Performer.Web';
}

map $site $target_opensilver {
    default '';
    'mun'   'host.docker.internal:55592';
    'per'   'host.docker.internal:62762';
}

server {
    # The server name and port to listen on
    #server_name localcombine;
    server_name ~^(?<site>mun|per)(?<domain>\.localcombine\.net)$;
    listen 80;

    # resolver 172.16.16.220 172.16.16.221 8.8.8.8;
    resolver 127.0.0.11;
    proxy_ssl_server_name on;

    set $hag_site 'latest.pulsencombine-a.se';
    set $target_protocol 'https';

    # location ~ ^/Classic/.+\.xap {
    #     set $locname 'local_xap';

    #     alias /var/www/xap/;

    #     try_files $target_xap =404;

    #     # kill cache
    #     add_header Last-Modified $date_gmt;
    #     add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    #     if_modified_since off;
    #     expires off;

    #     access_log /var/log/nginx/access.log upstreamlog;
    # }

    location ~ ^/Classic/.+Default\.aspx {
        set $locname 'opensilver_redirect';

        return 301 http://$site$domain/opensilver/;

        access_log /var/log/nginx/access.log upstreamlog;
    }

    location /opensilver/ {
        set $locname 'local_opensilver';

        # rewrite    /opensilver/(.+) /$1 break;
        proxy_pass http://$target_opensilver/;

        proxy_set_header Host $host;
        proxy_set_header CombineClassicApp $classic_app_uri;

        proxy_cookie_flags ~ nosecure samesite=lax;
        proxy_cookie_domain ~ $domain;

        access_log /var/log/nginx/access.log upstreamlog;
    }

    location / {
        set $locname 'combine';

        proxy_pass $target_protocol://$target_site;

        #proxy_http_version 1.1;

        proxy_set_header Host $target_site;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X_FORWARDED_PROTO https;

        proxy_cookie_flags ~ nosecure samesite=lax;
        proxy_cookie_domain ~ $site$domain;

        proxy_redirect $target_protocol://$hag_site/ http://$host/;
        proxy_redirect $target_protocol://$target_site/ http://$host/;

        sub_filter_once off;
        sub_filter_types application/json;
        sub_filter '$target_protocol://$target_site' 'http://$host';
        sub_filter '$target_protocol%3a%2f%2f$target_site' 'http%3a%2f%2f$host';

        access_log /var/log/nginx/access.log upstreamlog;
    }

    # Special config for websockets location
    location /api/eventhub {
        set $locname 'combine_eventhub';

        proxy_pass $target_protocol://$target_site;

        proxy_http_version 1.1;

        proxy_set_header Host $target_site;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X_FORWARDED_PROTO https;

        access_log /var/log/nginx/access.log upstreamlog;
    }

    location /wa/ {
        set $locname 'hag_wa';

        proxy_pass $target_protocol://$hag_site;
        proxy_set_header Host $hag_site;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X_FORWARDED_PROTO https;

        proxy_cookie_flags ~ nosecure samesite=lax;
        proxy_cookie_domain ~ $site$domain;

        proxy_redirect $target_protocol://$hag_site/ http://$host/;
        proxy_redirect $target_protocol://$target_site/ http://$host/;

        access_log /var/log/nginx/access.log upstreamlog;
    }
}


